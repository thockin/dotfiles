[user]
	name = Tim Hockin
	email = thockin@google.com
[include]
	path = ~/.gitconfig.local
[alias]
	co = checkout
	ci = commit
	st = status
	br = branch
	revert = checkout --
	amend = commit --amend
	ama = commit --amend -a
	curbr = "!f() { if [ ! -f .git/rebase-merge/head-name ]; then git rev-parse --abbrev-ref HEAD; else echo -n \"rb($(basename \"$(cat .git/rebase-merge/head-name)\")\"; if [ -f .git/rebase-merge/stopped-sha ]; then echo -n ',stopped'; fi; if (( $(git diff --name-only --diff-filter=U --relative | wc -l) != 0 )); then echo -n ',conflict'; fi; echo ')'; fi }; f"
	root = rev-parse --show-toplevel
	set-upstream = remote set-head upstream
	reset-upstream = remote set-head upstream --auto
	head = "!f() { if [ -z \"$1\" ]; then echo 'error: no remote specified' >&2; return 1; fi; git symbolic-ref refs/remotes/$1/HEAD; }; f"
	mbr = "!f() { if ! git head upstream >/dev/null 2>&1; then git reset-upstream; fi; set -o pipefail; git head upstream | cut -f4 -d/; }; f"
	fup = fetch upstream
	rb = rebase
	rbup = "!f() { echo \"Rebasing onto $(git mbr)\"; git rebase upstream/$(git mbr) \"$@\"; }; f"
	po = push origin
	pocur = !git po $(git curbr)
	pofcur = !git po -f $(git curbr)
	wdiff = diff --color-words
	track = "!f() { if [ -z \"$1\" ]; then echo 'error: no branch specified' >&2; return 1; fi; git fetch origin $1 && git co -b $1 origin/$1; }; f"
	retrack = "!f() { if [ -z \"$1\" ]; then echo 'error: no branch specified' >&2; return 1; fi; if [ -n \"$(git br -l $1)\" ]; then git br -D $1 || return 1; fi; git track $1; }; f"
	copr = "!f() { if [ -z \"$1\" ]; then echo 'error: no PR specified' >&2; return 1; fi; git fetch upstream pull/$1/head:pr-$1; git co pr-$1;}; f"
	wip = for-each-ref --sort='committerdate:iso8601' --format=' %(color:green)%(committerdate:relative)%09%(color:white)%(refname:short)' refs/heads
	my = "!f() { git log --reverse --no-show-signature --format='format:%C(auto)%h  %s' upstream/$(git mbr)..HEAD; echo;}; f"
	vs = "!f() { up=$1; test -z \"$1\" && up=upstream/$(git mbr); echo $up; git log --reverse --no-show-signature --format='format:%C(auto)%h  %s' ${up}..HEAD; echo;}; f"
	unstage = restore --staged
	kys = "!f() { curbr=$(git curbr); echo \"Nuking $curbr\"; sleep 3; git co master && git br -D $curbr; }; f"
[core]
	editor = "vim +0"
	excludesFile = ~/.gitignore
[merge]
	conflictstyle = zdiff3
	renamelimit = 4096
[push]
	default = current
	autoSetupRemote = true
[diff]
	algorithm = histogram
	srcPrefix = ""
	dstPrefix = ""
	#colorMoved = default
	#colorMovedWS = ignore-space-change
[http "https://gopkg.in"]
	followRedirects = true
[advice]
	detachedHead = false
	skippedCherryPicks = false
[rerere]
	enabled = false
[gpg]
	format = ssh
[gpg "ssh"]
	allowedSignersFile = /home/thockin/.ssh/allowed_signers
[commit]
	gpgsign = true
[tag]
	gpgsign = true
[log]
	showSignature = true
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[init]
	defaultBranch = main
[url "git@github.com:"]
	insteadOf = "gh://"
[transfer]
	fsckobjects = true
[fetch]
	fsckobjects = true
[receive]
	fsckObjects = true
